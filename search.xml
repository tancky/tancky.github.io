<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[小Tips：Js和JQuery中获得当前索引值的方法]]></title>
      <url>%2F2016%2F12%2F15%2F%E5%B0%8FTips%EF%BC%9AJs%E5%92%8CJQuery%E4%B8%AD%E8%8E%B7%E5%BE%97%E5%BD%93%E5%89%8D%E7%B4%A2%E5%BC%95%E5%80%BC%E7%9A%84%E6%96%B9%E6%B3%95%2F</url>
      <content type="text"><![CDATA[自从用了Jquery库以后，感觉写Js代码没有那么繁琐了，之前自己用JQuery仿京东首页做了一个轮播图（就差无缝切换了…），代码量仅仅用了几十行，后来打算用原生JS写一遍的时候就悲剧了，上百行的代码量，而且JQuery用多了，自己竟然连获取原生JS中的当前索引值都不会了，还是要好好补补原生JS，基础很重要！基础很重要！基础很重要！重要的事情说三遍！所以，今天就记录下曾经踩过的坑，长个记性！在一些常见的特效里比如轮播图，下拉列表，Tab切换里都会用到循环遍历取得当前索引值并添加事件的方法，在JS中取得当前索引的方法是：123456789101112&lt;body&gt; &lt;ul id="test"&gt; &lt;li&gt;1&lt;/li&gt; &lt;li&gt;2&lt;/li&gt; &lt;li&gt;3&lt;/li&gt; &lt;li&gt;4&lt;/li&gt; &lt;li&gt;5&lt;/li&gt; &lt;li&gt;6&lt;/li&gt; &lt;li&gt;7&lt;/li&gt; &lt;li&gt;8&lt;/li&gt; &lt;/ul&gt;&lt;/body&gt; 123456789101112window.onload=function()&#123; //当页面全部加载完毕后执行 var oUl=document.getElementById("test"), //获取父元素ul oli=oUl.getElementsByTagName("li"); //获取所有的子元素li for(var i=0; i&lt;oli.length; i++)&#123; //循环遍历每一个li元素 oli[i].index=i; //重点来了（Js中获取当前索引值的方法） oli[i].onclick=function()&#123; //给当前元素添加点击事件 alert(this.index); //输出当前的索引值 &#125; &#125;&#125; 以上就是原生JS中获取当前索引的方法，其实不难就那么一行代码，虽然当时困扰了我很久….接下来就来写JQuery中的方法，这个就更简单啦！ 1234567 $(function () &#123; $("#test li").on('click', function() &#123; var me=$(this); //将当前元素存入名为me的变量里 index=me.index(); //获取当前的索引值 alert（index）； //输出当前的索引值 &#125;&#125; 看到没，JQuery代码就是这么简单，因为JQuery中提供了index() 方法，该方法返回指定元素相对于其他指定元素的索引值。 写个笔记，给自己提个醒，同样的坑不能掉下去两次了！！！]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[那些年我们一起踩过的坑——CSS中的命名及书写建议]]></title>
      <url>%2F2016%2F12%2F13%2F%E9%82%A3%E4%BA%9B%E5%B9%B4%E6%88%91%E4%BB%AC%E4%B8%80%E8%B5%B7%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91%E2%80%94%E2%80%94CSS%E4%B8%AD%E7%9A%84%E5%91%BD%E5%90%8D%E5%8F%8A%E4%B9%A6%E5%86%99%E5%BB%BA%E8%AE%AE%2F</url>
      <content type="text"><![CDATA[今天来谈一谈我之前踩过的CSS坑之命名问题，相信很多跟我一样最开始学习CSS的时候都不知道怎样命名，有的起名字直接就是a，b，c，d（至少我初学的时候真的这么干过），更有甚者也会用汉语拼音来命名（例如这样：toubu，neirong，dibu等等），这些命名都是非常不好的习惯，在碰到很多复杂的页面布局时，这样命名会使自己不知所措，找一个class找很久都找不到，非常影响工（xue）作（xi）效率。经过我的多番搜寻与总结下，写了这篇博文。 为什么需要命名规范？ 合理、科学地对CSS代码命名,能够精简CSS代码,提高代码的开发效率,方便在日常工作中对网站进行维护与修改.遵循W3C所规定的语义化标准。 命名的基本标准 类名使用小写字母，以中划线/下划线分隔 1&lt;div class="header"&gt;&lt;/div&gt; id采用驼峰式命名且尽量少用 1&lt;div id="myDialog"&gt;&lt;/div&gt; 尽量不用拼音 1&lt;div id="pinyin"&gt;&lt;/div&gt; 尽量不缩写，除非一看就能懂的单词 1&lt;div class="fl"&gt;&lt;/div&gt; //fr即float: right; 禁用通配符，影响性能 CSS中的书写顺序 位置属性(position, display, float等) 大小(width, height, padding, margin) 文字系列(font系列, line-height, letter-spacing, color text-align等) 背景(background, border等) 其他(animation, transition等) 12345678.box&#123; position:relative; width:100px; height:100px; font-size:14px; text-align:center; background-color:#ccc;&#125; 常用的class命名规范 页面结构区 容器: container 页头：header 内容：content/container 页面主体：main 页尾：footer 导航：nav 侧栏：sidebar 栏目：column 页面外围控制整体佈局宽度：wrapper 左右中：left right center 导航 导航：nav 主导航：mainnav 子导航：subnav 顶导航：topnav 边导航：sidebar 左导航：leftsidebar 右导航：rightsidebar 菜单：menu 子菜单：submenu 标题: title 摘要: summary 功能区 标志：logo 广告：banner 登陆：login 登录条：loginbar 注册：register 搜索：search 功能区：shop 标题：title 加入：joinus 状态：status 按钮：btn 滚动：scroll 标籤页：tab 文章列表：list 提示信息：msg 当前的: current 小技巧：tips 图标: icon 注释：note 指南：guild 服务：service 热点：hot 新闻：news 下载：download 投票：vote 合作伙伴：partner 友情链接：link 版权：copyright CSS样式表文件命名 全局：global.css 全局样式为全站公用，为页面样式基础，页面中必须包含。 结构：layout.css 页面结构类型复杂，并且公用类型较多时使用。多用在首页级页面和产品类页面中。 私有：style.css 独立页面所使用的样式文件，页面中必须包含。 模块 module.css 产品类页面应用，将可复用类模块进行剥离后，可与其它样式配合使用。 主题 themes.css 实现换肤功能时应用。 补丁 mend.css 附图一张，加深记忆！ 简单规则 以中划线连接，如.item-img 使用两个中划线表示特殊化，如.item-img.item-img–small表示在.item-img的基础上特殊化 状态类直接使用单词，参考上面的关键词，如.active, .checked 图标以icon-为前缀（字体图标采用.icon-font.i-name方式命名）。 模块采用关键词命名，如.slide, .modal, .tips, .- tabs，特殊化采用上面两个中划线表示，如.imgslide–full, .modal–pay, .tips–up, .tabs–simple js操作的类统一加上js-前缀 不要超过四个class组合使用，如.a.b.c.d 结语好了，以上就是常用的css命名规则了，其实说白了规则就是”人如其名”，稍微懂点英语就知道只不过就是把网页中相对应的地方以英文的方式来命名，毕竟我们都是用英文来写代码的！写代码其实也可以帮助提升自己的英语水平的，一举两得，何乐而不为呢？]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Sublime Text3中那些常用的快捷键]]></title>
      <url>%2F2016%2F12%2F13%2FSublime-Text3%E4%B8%AD%E9%82%A3%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE%2F</url>
      <content type="text"><![CDATA[学习前端时间也不短了，记得最开始学HTML/css的时候是通过《Head First HTML与CSS》这本书开始接触前端的，快递包裹拆开的时候整个人都懵逼了。好厚的一本书，整整700多页，对于我这种直到大学毕业了还没有好好的看过书的人来说简直是场灾难！不过幸好之前有在知乎了解到这本书虽然很厚，但是绝大部分都是以图文的形式展示出来的，所以看起来不会那么的吃力让人想睡觉。后来边看边跟着敲代码，当时的我还傻不拉几的用的windows系统自带的记事本，每天重复得敲着…等等，竟然没有很厌烦的感觉，反而乐此不疲，也许这就是在自学前端的过程中所能给我带来的最大的快乐吧，看到自己敲的代码在浏览器中呈现出来，那种感觉只有亲身经历过才会懂！ 直到我接触了sublime Text编辑器也就是今天这篇文章的重点，我就深深的爱上了他！熟练掌握各种快捷键，可以给我们日常工作中带来极大的便利，节约时间成本，把精力专心地放在项目上。那么首先我们来看看他有哪些优点！ Sublime Text：一款具有代码高亮、语法提示、自动完成且反应快速的编辑器软件，不仅具有华丽的界面，还支持插件扩展机制，用她来写代码，绝对是一种享受。相比于难于上手的Vim，浮肿沉重的Eclipse，VS，即便体积轻巧迅速启动的Editplus、Notepad++，在SublimeText面前大略显失色，无疑这款性感无比的编辑器是Coding和Writing最佳的选择，没有之一。 最常用的快捷键（以windows系统为例）命令面板 双击界面后按下Ctrl+shift+p即可调用命令面板像这样 我们可以输入Package Control安装各种插件 【首推Emmet插件】(PS:sublime text编辑器支持模糊匹配，例如输入Package Control，那么只需要输入pctl即可匹配到该命令，如下图所示) 也可以输入html，css，JavaScript等来改变要使用的语言环境 多行游标 Ctrl+H：查找替换 Ctrl+D 选词 （选中某个文本后，反复按快捷键即可选中下一个相同的文本同时编辑） Ctrl+K Ctrl+D 跳过当前选择，选择下一个 Alt+F3 选择所有与光标所在单词相同的单词 按住shift键，然后按住鼠标右键向下拖动，也可产生多行游标 第二个图为连续按了5次Ctrl+D后的结果， 也可以直接按Alt+F3！ 搜索，撤销，反撤销 Ctrl+F 搜索 （搜索当前文档中相对应的字符串，搜索到的字符串以高亮显示） Ctrl+Z 撤销 （撤销上一步的操作，可重复按键） Ctrl+Y 取消撤销（与之相反） 按下Crtl+Z后 标签页切换 Ctrl+Tab （当前窗口中的标签页切换） 切换后效果 删除整行 Ctrl+Shift+K （删除整行） 删除后效果 学以致用如何快速搭建一个HTML文档 Ctrl+N Ctrl+S 保存页面 Ctrl+shift+p 调用命令面板输入，输入HTML调用语言 编辑区输入！号 Ctrl+E Ctrl+P 输入#body回车即可跳转至body标签 Ctrl+Enter 在当前行下添加一行 ctrl+shirt+enter 在当前行上方添加一行（与之相反） (ul&gt;.item \$*10{content} ) （ &gt; 号生成子元素 ，\$ 产生序号，{ }产生内容 ） Ctrl+E Ctrl+] 增加缩进 Ctrl+[ 减小缩进 光标点击需要多选的位置 Alt+F3 全选 输入h3{}，然后Ctrl+E（注：Ctrl+E也可以用来闭合元素标签） 结语好了，以上就是在开发过程中常见的一些快捷键，希望可以通过图文并茂的方式可以更好的帮助记忆（PS：受head first 系列图书的影响…），其实这里面也有很多我自己也没用过的快捷键，以后没事儿的时候多来看看，再敲代码的时候就可以更轻松了哈哈哈，这样极大限度的摆脱鼠标的困扰，两耳不闻窗外事，一心只去敲代码！Fighting！！！]]></content>
    </entry>

    
  
  
</search>
