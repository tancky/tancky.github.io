<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tancky&#39;s  Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://tancky.github.io/"/>
  <updated>2016-12-15T12:54:19.657Z</updated>
  <id>https://tancky.github.io/</id>
  
  <author>
    <name>Tancky</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>小Tips：Js和JQuery中获得当前索引值的方法</title>
    <link href="https://tancky.github.io/2016/12/15/%E5%B0%8FTips%EF%BC%9AJs%E5%92%8CJQuery%E4%B8%AD%E8%8E%B7%E5%BE%97%E5%BD%93%E5%89%8D%E7%B4%A2%E5%BC%95%E5%80%BC%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://tancky.github.io/2016/12/15/小Tips：Js和JQuery中获得当前索引值的方法/</id>
    <published>2016-12-15T12:52:15.324Z</published>
    <updated>2016-12-15T12:54:19.657Z</updated>
    
    <content type="html"><![CDATA[<p>自从用了Jquery库以后，感觉写Js代码没有那么繁琐了，之前自己用JQuery仿京东首页做了一个轮播图（就差无缝切换了…），代码量仅仅用了几十行，后来打算用原生JS写一遍的时候就悲剧了，上百行的代码量，而且JQuery用多了，自己竟然连获取原生JS中的当前索引值都不会了，还是要好好补补原生JS，基础很重要！基础很重要！基础很重要！重要的事情说三遍！所以，今天就记录下曾经踩过的坑，长个记性！<br>在一些常见的特效里比如轮播图，下拉列表，Tab切换里都会用到循环遍历取得当前索引值并添加事件的方法，在JS中取得当前索引的方法是：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"test"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>6<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>7<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>8<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;                        <span class="comment">//当页面全部加载完毕后执行</span></div><div class="line">        <span class="keyword">var</span> oUl=<span class="built_in">document</span>.getElementById(<span class="string">"test"</span>), <span class="comment">//获取父元素ul</span></div><div class="line">            oli=oUl.getElementsByTagName(<span class="string">"li"</span>);  <span class="comment">//获取所有的子元素li</span></div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;oli.length; i++)&#123;         <span class="comment">//循环遍历每一个li元素</span></div><div class="line">                                                </div><div class="line">            oli[i].index=i;                      <span class="comment">//重点来了（Js中获取当前索引值的方法）</span></div><div class="line">            </div><div class="line">            oli[i].onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;           <span class="comment">//给当前元素添加点击事件</span></div><div class="line">               alert(<span class="keyword">this</span>.index);                <span class="comment">//输出当前的索引值</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>以上就是原生JS中获取当前索引的方法，其实不难就那么一行代码，虽然当时困扰了我很久….接下来就来写JQuery中的方法，这个就更简单啦！</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"> $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    $(<span class="string">"#test li"</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">			<span class="keyword">var</span> me=$(<span class="keyword">this</span>);         <span class="comment">//将当前元素存入名为me的变量里</span></div><div class="line">				index=me.index();              <span class="comment">//获取当前的索引值</span></div><div class="line">				alert（index）；               <span class="comment">//输出当前的索引值</span></div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>看到没，JQuery代码就是这么简单，因为JQuery中提供了index() 方法，该方法返回指定元素相对于其他指定元素的索引值。</p>
<p>写个笔记，给自己提个醒，同样的坑不能掉下去两次了！！！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自从用了Jquery库以后，感觉写Js代码没有那么繁琐了，之前自己用JQuery仿京东首页做了一个轮播图（就差无缝切换了…），代码量仅仅用了几十行，后来打算用原生JS写一遍的时候就悲剧了，上百行的代码量，而且JQuery用多了，自己竟然连获取原生JS中的当前索引值都不会了，
    
    </summary>
    
      <category term="JavaScript" scheme="https://tancky.github.io/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://tancky.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>那些年我们一起踩过的坑——CSS中的命名及书写建议</title>
    <link href="https://tancky.github.io/2016/12/13/%E9%82%A3%E4%BA%9B%E5%B9%B4%E6%88%91%E4%BB%AC%E4%B8%80%E8%B5%B7%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91%E2%80%94%E2%80%94CSS%E4%B8%AD%E7%9A%84%E5%91%BD%E5%90%8D%E5%8F%8A%E4%B9%A6%E5%86%99%E5%BB%BA%E8%AE%AE/"/>
    <id>https://tancky.github.io/2016/12/13/那些年我们一起踩过的坑——CSS中的命名及书写建议/</id>
    <published>2016-12-13T13:49:14.260Z</published>
    <updated>2016-12-13T18:44:42.195Z</updated>
    
    <content type="html"><![CDATA[<p>今天来谈一谈我之前踩过的CSS坑之命名问题，相信很多跟我一样最开始学习CSS的时候都不知道怎样命名，有的起名字直接就是a，b，c，d（至少我初学的时候真的这么干过），更有甚者也会用汉语拼音来命名（例如这样：toubu，neirong，dibu等等），这些命名都是非常不好的习惯，在碰到很多复杂的页面布局时，这样命名会使自己不知所措，找一个class找很久都找不到，非常影响工（xue）作（xi）效率。<a id="more"></a>经过我的多番搜寻与总结下，写了这篇博文。</p>
<h2 id="为什么需要命名规范？"><a href="#为什么需要命名规范？" class="headerlink" title="为什么需要命名规范？"></a>为什么需要命名规范？</h2><blockquote>
<p>合理、科学地对CSS代码命名,能够精简CSS代码,提高代码的开发效率,方便在日常工作中对网站进行维护与修改.遵循W3C所规定的语义化标准。</p>
</blockquote>
<h2 id="命名的基本标准"><a href="#命名的基本标准" class="headerlink" title="命名的基本标准"></a>命名的基本标准</h2><ul>
<li><p>类名使用小写字母，以中划线/下划线分隔</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>id采用驼峰式命名且尽量少用</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myDialog"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>尽量不用拼音</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"pinyin"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>尽量不缩写，除非一看就能懂的单词</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fl"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>     //fr即float: right;</div></pre></td></tr></table></figure>
</li>
<li><p>禁用通配符，影响性能</p>
</li>
</ul>
<h2 id="CSS中的书写顺序"><a href="#CSS中的书写顺序" class="headerlink" title="CSS中的书写顺序"></a>CSS中的书写顺序</h2><ul>
<li>位置属性(position, display, float等)</li>
<li>大小(width, height, padding, margin)</li>
<li>文字系列(font系列, line-height, letter-spacing, color text-align等)</li>
<li>背景(background, border等)</li>
<li>其他(animation, transition等)</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">.box&#123;</div><div class="line">  position:relative;</div><div class="line">  width:100px;</div><div class="line">  height:100px;</div><div class="line">  font-size:14px;</div><div class="line">  text-align:center;</div><div class="line">  background-color:#ccc;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="常用的class命名规范"><a href="#常用的class命名规范" class="headerlink" title="常用的class命名规范"></a>常用的class命名规范</h2><ul>
<li><p>页面结构区</p>
<p> 容器: container<br>　　页头：header<br>　　内容：content/container<br>　　页面主体：main<br>　　页尾：footer<br>　　导航：nav<br>　　侧栏：sidebar<br>　　栏目：column<br>　　页面外围控制整体佈局宽度：wrapper<br>　　左右中：left right center</p>
</li>
<li><p>导航</p>
<p> 导航：nav<br>　　主导航：mainnav<br>　　子导航：subnav<br>　　顶导航：topnav<br>　　边导航：sidebar<br>　　左导航：leftsidebar<br>　　右导航：rightsidebar<br>　　菜单：menu<br>　　子菜单：submenu<br>　　标题: title<br>　　摘要: summary</p>
</li>
<li><p>功能区</p>
<p> 标志：logo<br>　　广告：banner<br>　　登陆：login<br>　　登录条：loginbar<br>　　注册：register<br>　　搜索：search<br>　　功能区：shop<br>　　标题：title<br>　　加入：joinus<br>　　状态：status<br>　　按钮：btn<br>　　滚动：scroll<br>　　标籤页：tab<br>　　文章列表：list<br>　　提示信息：msg<br>　　当前的: current<br>　　小技巧：tips<br>　　图标: icon<br>　　注释：note<br>　　指南：guild<br>　　服务：service<br>　　热点：hot<br>　　新闻：news<br>　　下载：download<br>　　投票：vote<br>　　合作伙伴：partner<br>　　友情链接：link<br>　　版权：copyright</p>
</li>
<li><p>CSS样式表文件命名</p>
<p> 全局：global.css</p>
<p> 全局样式为全站公用，为页面样式基础，页面中必须包含。</p>
<p> 结构：layout.css</p>
<p> 页面结构类型复杂，并且公用类型较多时使用。多用在首页级页面和产品类页面中。</p>
<p> 私有：style.css</p>
<p> 独立页面所使用的样式文件，页面中必须包含。</p>
<p> 模块 module.css</p>
<p> 产品类页面应用，将可复用类模块进行剥离后，可与其它样式配合使用。</p>
<p> 主题 themes.css</p>
<p> 实现换肤功能时应用。</p>
<p> 补丁 mend.css</p>
</li>
</ul>
<pre><code>附图一张，加深记忆！
</code></pre><p><img src="http://i1.piimg.com/567571/4a295fce95d87fd6.png" alt="CSS命名"></p>
<h2 id="简单规则"><a href="#简单规则" class="headerlink" title="简单规则"></a>简单规则</h2><ul>
<li>以中划线连接，如.item-img</li>
<li>使用两个中划线表示特殊化，如.item-img.item-img–small表示在.item-img的基础上特殊化</li>
<li>状态类直接使用单词，参考上面的关键词，如.active, .checked</li>
<li>图标以icon-为前缀（字体图标采用.icon-font.i-name方式命名）。</li>
<li>模块采用关键词命名，如.slide, .modal, .tips, .-        tabs，特殊化采用上面两个中划线表示，如.imgslide–full, .modal–pay, .tips–up, .tabs–simple</li>
<li>js操作的类统一加上js-前缀</li>
<li>不要超过四个class组合使用，如.a.b.c.d</li>
</ul>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>好了，以上就是常用的css命名规则了，其实说白了规则就是”人如其名”，稍微懂点英语就知道只不过就是把网页中相对应的地方以英文的方式来命名，毕竟我们都是用英文来写代码的！写代码其实也可以帮助提升自己的英语水平的，一举两得，何乐而不为呢？</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天来谈一谈我之前踩过的CSS坑之命名问题，相信很多跟我一样最开始学习CSS的时候都不知道怎样命名，有的起名字直接就是a，b，c，d（至少我初学的时候真的这么干过），更有甚者也会用汉语拼音来命名（例如这样：toubu，neirong，dibu等等），这些命名都是非常不好的习惯，在碰到很多复杂的页面布局时，这样命名会使自己不知所措，找一个class找很久都找不到，非常影响工（xue）作（xi）效率。
    
    </summary>
    
      <category term="html/css" scheme="https://tancky.github.io/categories/html-css/"/>
    
    
      <category term="css" scheme="https://tancky.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text3中那些常用的快捷键</title>
    <link href="https://tancky.github.io/2016/12/13/Sublime-Text3%E4%B8%AD%E9%82%A3%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>https://tancky.github.io/2016/12/13/Sublime-Text3中那些常用的快捷键/</id>
    <published>2016-12-12T17:15:17.546Z</published>
    <updated>2016-12-12T17:24:02.258Z</updated>
    
    <content type="html"><![CDATA[<p>  学习前端时间也不短了，记得最开始学HTML/css的时候是通过《Head First HTML与CSS》这本书开始接触前端的，快递包裹拆开的时候整个人都懵逼了。好厚的一本书，整整700多页，对于我这种直到大学毕业了还没有好好的看过书的人来说简直是场灾难！不过幸好之前有在知乎了解到这本书虽然很厚，但是绝大部分都是以图文的形式展示出来的，所以看起来不会那么的吃力让人想睡觉。后来边看边跟着敲代码，当时的我还傻不拉几的用的windows系统自带的记事本，每天重复得敲着<html><head></head></html>…等等，竟然没有很厌烦的感觉，反而乐此不疲，也许这就是在自学前端的过程中所能给我带来的最大的快乐吧，看到自己敲的代码在浏览器中呈现出来，那种感觉只有亲身经历过才会懂！</p>
<p>直到我接触了sublime Text编辑器也就是今天这篇文章的重点，我就深深的爱上了他！<a id="more"></a>熟练掌握各种快捷键，可以给我们日常工作中带来极大的便利，节约时间成本，把精力专心地放在项目上。那么首先我们来看看他有哪些优点！</p>
<blockquote>
<p>Sublime Text：一款具有代码高亮、语法提示、自动完成且反应快速的编辑器软件，不仅具有华丽的界面，还支持插件扩展机制，用她来写代码，绝对是一种享受。相比于难于上手的Vim，浮肿沉重的Eclipse，VS，即便体积轻巧迅速启动的Editplus、Notepad++，在SublimeText面前大略显失色，无疑这款性感无比的编辑器是Coding和Writing最佳的选择，没有之一。</p>
</blockquote>
<h2 id="最常用的快捷键（以windows系统为例）"><a href="#最常用的快捷键（以windows系统为例）" class="headerlink" title="最常用的快捷键（以windows系统为例）"></a>最常用的快捷键（以windows系统为例）</h2><h3 id="命令面板"><a href="#命令面板" class="headerlink" title="命令面板"></a>命令面板</h3><ul>
<li>双击界面后按下Ctrl+shift+p即可调用命令面板像这样</li>
</ul>
<p><img src="http://i1.piimg.com/567571/90259d0897d885ba.png" alt="命令面板"></p>
<ul>
<li>我们可以输入Package Control安装各种插件  【首推Emmet插件】(PS:sublime text编辑器支持模糊匹配，例如输入Package Control，那么只需要输入pctl即可匹配到该命令，如下图所示)</li>
</ul>
<p><img src="http://i1.piimg.com/567571/1ae879010b551e56.png" alt="命令面板">        </p>
<ul>
<li>也可以输入html，css，JavaScript等来改变要使用的语言环境</li>
</ul>
<p><img src="http://i1.piimg.com/567571/4e6777f367263ad8.png" alt="命令面板">    </p>
<h3 id="多行游标"><a href="#多行游标" class="headerlink" title="多行游标"></a>多行游标</h3><ul>
<li><p>Ctrl+H：查找替换</p>
</li>
<li><p>Ctrl+D 选词 （选中某个文本后，反复按快捷键即可选中下一个相同的文本同时编辑）</p>
</li>
<li><p>Ctrl+K Ctrl+D 跳过当前选择，选择下一个</p>
</li>
<li><p>Alt+F3 选择所有与光标所在单词相同的单词</p>
</li>
<li><p>按住shift键，然后按住鼠标右键向下拖动，也可产生多行游标</p>
</li>
</ul>
<p><img src="http://p1.bpimg.com/567571/3db00a73f0251227.png" alt="命令面板"> </p>
<pre><code>第二个图为连续按了5次Ctrl+D后的结果， 也可以直接按Alt+F3！
</code></pre><p><img src="http://p1.bpimg.com/567571/50f2bb5cf95611f1.png" alt="命令面板"></p>
<h3 id="搜索，撤销，反撤销"><a href="#搜索，撤销，反撤销" class="headerlink" title="搜索，撤销，反撤销"></a>搜索，撤销，反撤销</h3><ul>
<li>Ctrl+F 搜索 （搜索当前文档中相对应的字符串，搜索到的字符串以高亮显示）</li>
</ul>
<p><img src="http://p1.bpimg.com/567571/d67923e3b1cbcdff.png" alt="命令面板"> </p>
<ul>
<li>Ctrl+Z 撤销 （撤销上一步的操作，可重复按键）</li>
</ul>
<ul>
<li>Ctrl+Y 取消撤销（与之相反）</li>
</ul>
<p><img src="http://p1.bpimg.com/567571/046f325568dd5853.png" alt="命令面板"> </p>
<pre><code>按下Crtl+Z后
</code></pre><p><img src="http://p1.bpimg.com/567571/1fd1819f78ae94b4.png" alt="命令面板"> </p>
<h3 id="标签页切换"><a href="#标签页切换" class="headerlink" title="标签页切换"></a>标签页切换</h3><ul>
<li>Ctrl+Tab （当前窗口中的标签页切换）</li>
</ul>
<p><img src="http://p1.bqimg.com/567571/5956d7336b9b60f2.png" alt="命令面板"> </p>
<pre><code>切换后效果   
</code></pre><p><img src="http://p1.bqimg.com/567571/906b7f5ebb6e0813.png" alt="命令面板"> </p>
<h3 id="删除整行"><a href="#删除整行" class="headerlink" title="删除整行"></a>删除整行</h3><ul>
<li>Ctrl+Shift+K （删除整行）</li>
</ul>
<p><img src="http://p1.bqimg.com/567571/c578a0f4ab4d93e2.png" alt="命令面板"> </p>
<pre><code>删除后效果   
</code></pre><p><img src="http://p1.bqimg.com/567571/2265fe38920c723c.png" alt="命令面板"> </p>
<h2 id="学以致用"><a href="#学以致用" class="headerlink" title="学以致用"></a>学以致用</h2><h3 id="如何快速搭建一个HTML文档"><a href="#如何快速搭建一个HTML文档" class="headerlink" title="如何快速搭建一个HTML文档"></a>如何快速搭建一个HTML文档</h3><ul>
<li><p>Ctrl+N </p>
</li>
<li><p>Ctrl+S   保存页面<br><img src="http://p1.bqimg.com/567571/44936a881c3538af.png" alt="命令面板"></p>
</li>
</ul>
<ul>
<li>Ctrl+shift+p  调用命令面板输入，输入HTML调用语言</li>
</ul>
<p><img src="http://i1.piimg.com/567571/50a48a9b34374fc3.png" alt="命令面板"></p>
<ul>
<li>编辑区输入！号</li>
</ul>
<p><img src="http://i1.piimg.com/567571/97155fb46a7cfdfb.png" alt="命令面板"></p>
<ul>
<li>Ctrl+E </li>
</ul>
<p><img src="http://i1.piimg.com/567571/d93d37845fda2ef9.png" alt="命令面板"></p>
<ul>
<li>Ctrl+P 输入#body回车即可跳转至body标签 </li>
</ul>
<p><img src="http://i1.piimg.com/567571/6e621d3ad422c47b.png" alt="命令面板"></p>
<p><img src="http://i1.piimg.com/567571/1ca8efa598e2d074.png" alt="命令面板"></p>
<ul>
<li><p>Ctrl+Enter 在当前行下添加一行 </p>
</li>
<li><p>ctrl+shirt+enter 在当前行上方添加一行（与之相反）</p>
</li>
</ul>
<p><img src="http://i1.piimg.com/567571/2f728a1ca18eba45.png" alt="命令面板"></p>
<ul>
<li>(ul&gt;.item \$*10{content} )   （ &gt; 号生成子元素 ，\$ 产生序号，{ }产生内容 ）</li>
</ul>
<p><img src="http://i1.piimg.com/567571/db6d17920f20c790.png" alt="命令面板"></p>
<ul>
<li>Ctrl+E </li>
</ul>
<p><img src="http://i1.piimg.com/567571/056f235dfff6c6eb.png" alt="命令面板"></p>
<ul>
<li><p>Ctrl+] 增加缩进 </p>
</li>
<li><p>Ctrl+[ 减小缩进</p>
</li>
</ul>
<p><img src="http://i1.piimg.com/567571/fc1c6e3b10018421.png" alt="命令面板"></p>
<ul>
<li>光标点击需要多选的位置</li>
</ul>
<p><img src="http://p1.bqimg.com/567571/8fd0f3152d2abd5c.png" alt="命令面板"></p>
<ul>
<li>Alt+F3  全选</li>
</ul>
<p><img src="http://p1.bqimg.com/567571/0944cf6800892e76.png" alt="命令面板"></p>
<ul>
<li>输入h3{}，然后Ctrl+E（注：Ctrl+E也可以用来闭合元素标签）</li>
</ul>
<p><img src="http://p1.bqimg.com/567571/ff68d5f0f59d03ed.png" alt="命令面板"></p>
<p><img src="http://p1.bqimg.com/567571/56a0a1aa9a8c1e28.png" alt="命令面板"></p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>好了，以上就是在开发过程中常见的一些快捷键，希望可以通过图文并茂的方式可以更好的帮助记忆（PS：受head first 系列图书的影响…），其实这里面也有很多我自己也没用过的快捷键，以后没事儿的时候多来看看，再敲代码的时候就可以更轻松了哈哈哈，这样极大限度的摆脱鼠标的困扰，两耳不闻窗外事，一心只去敲代码！<br>Fighting！！！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  学习前端时间也不短了，记得最开始学HTML/css的时候是通过《Head First HTML与CSS》这本书开始接触前端的，快递包裹拆开的时候整个人都懵逼了。好厚的一本书，整整700多页，对于我这种直到大学毕业了还没有好好的看过书的人来说简直是场灾难！不过幸好之前有在知乎了解到这本书虽然很厚，但是绝大部分都是以图文的形式展示出来的，所以看起来不会那么的吃力让人想睡觉。后来边看边跟着敲代码，当时的我还傻不拉几的用的windows系统自带的记事本，每天重复得敲着&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;/html&gt;…等等，竟然没有很厌烦的感觉，反而乐此不疲，也许这就是在自学前端的过程中所能给我带来的最大的快乐吧，看到自己敲的代码在浏览器中呈现出来，那种感觉只有亲身经历过才会懂！&lt;/p&gt;
&lt;p&gt;直到我接触了sublime Text编辑器也就是今天这篇文章的重点，我就深深的爱上了他！
    
    </summary>
    
      <category term="Sublime Text" scheme="https://tancky.github.io/categories/Sublime-Text/"/>
    
    
      <category term="Sublime Text" scheme="https://tancky.github.io/tags/Sublime-Text/"/>
    
  </entry>
  
</feed>
